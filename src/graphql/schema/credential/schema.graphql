scalar Email
scalar Date

directive @auth(requires: Role!) on FIELD_DEFINITION

enum Role {
  ADMIN
  OWNER
  USER
}
enum Provider {
  Email
  Gmail
}

type AuthProvider {
  id: ID!
  email: Email!
  password: String
  provider: Provider!
  verifiedCode: Int
  verified: Boolean!
  userId: User
  role: Role!
  createdAt: Date
  updateAt: Date
}

input loginInput {
  email: Email!
  password: String!
}

input AuthProviderInput {
  email: Email!
  password: String
  provider: Provider!
}

type AuthAndToken {
  token: String!
  auth: AuthProvider!
}

type Query {
  signUp(input: AuthProviderInput!): AuthAndToken
  login(input: loginInput!): AuthAndToken
}
